<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wechatserver.mapper.RespNewsMessageMapper">
	<!-- 自定义返回结果集 -->
	<resultMap type="NewsMessage" id="newsMessageMap">
		<result column="to_username" property="ToUserName"
			javaType="java.lang.String" />
		<result column="from_username" property="FromUserName"
			javaType="java.lang.String" />
		<result column="create_time" property="CreateTime"
			javaType="java.lang.Integer" />
		<result column="msg_type" property="MsgType"
			javaType="java.lang.String" />
		<result column="article_count" property="ArticleCount"
			javaType="java.lang.Integer" />
		<collection column="article_id" property="Articles"
			select="getArticles"></collection>
	</resultMap>
	<select id="getArticles"
		resultType="com.wechatserver.entry.message.response.Article">
		select * from resp_message_news_dtl d where
		d.article_id=#{article_id} order by d.article_id ASC
	</select>
	<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
	<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
		方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
	<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 
		语句的 selectKey 子元素设置它的值。默认：不设置。 -->
	<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->
	<insert id="insert"
		parameterType="com.wechatserver.entry.message.response.NewsMessage">
		insert into
		resp_message_news
		r(to_username,from_username,create_time,msg_type,article_count,article_id)
		values(#{ToUserName},#{FromUserName},#{CreateTime},#{MsgType},#{ArticleCount},#{Articles})
	</insert>
	<delete id="delete">
		delete from resp_message_news r where
		r.to_username=#{0}
		and
		r.from_username=#{1} and
		r.create_time=#{2}
	</delete>
	<update id="update"
		parameterType="com.wechatserver.entry.message.response.NewsMessage">
		update resp_message_news r set r.content=#{content}
		where
		r.to_username=#{ToUserName} and r.from_username=#{FromUserName}
		and
		r.create_time=#{CreateTime}
	</update>
	<select id="selectOne" resultMap="newsMessageMap">
		select * from
		resp_message_news
		r
		where
		r.to_username=#{0} and
		r.fr_omusername=#{1} and
		r.create_time=#{2}
	</select>
	<select id="selectAll" resultMap="newsMessageMap">
		select * from
		resp_message_news
		r
		order by r.create_time DESC
	</select>
</mapper>